import { QuizQuestion, SpiritualGift } from '@/types';
import questionsAndGifts from './questions_and_gifts.json';

export const SPIRITUAL_GIFTS = {
  PROPHECY: 'prophecy',
  PASTOR: 'pastor',
  TEACHING: 'teaching',
  WISDOM: 'wisdom',
  KNOWLEDGE: 'knowledge',
  EXHORTATION: 'exhortation',
  DISCERNMENT: 'discerning',
  GIVING: 'giving',
  HELPS: 'helps',
  MERCY: 'mercy',
  MISSIONARY: 'missionary',
  EVANGELIST: 'evangelist',
  HOSPITALITY: 'hospitality',
  FAITH: 'faith',
  LEADERSHIP: 'leadership',
  ADMINISTRATION: 'administration',
  MIRACLES: 'miracles',
  HEALING: 'healing',
  TONGUES: 'tongues',
  INTERPRETATION: 'interpretation',
  VOLUNTARY_POVERTY: 'poverty',
  CELIBACY: 'celibacy',
  INTERCESSION: 'intercession',
  DELIVERANCE: 'deliverance',
  SERVICE: 'service',
  APOSTLE: 'apostle',
  WORSHIP_LEADING: 'worship',
} as const;

export type SpiritualGiftType = typeof SPIRITUAL_GIFTS[keyof typeof SPIRITUAL_GIFTS];

export const GIFT_QUESTIONS: Record<SpiritualGiftType, number[]> = {
  [SPIRITUAL_GIFTS.PROPHECY]: [1, 28, 55, 82, 109],
  [SPIRITUAL_GIFTS.PASTOR]: [2, 29, 56, 83, 110],
  [SPIRITUAL_GIFTS.TEACHING]: [3, 30, 57, 84, 111],
  [SPIRITUAL_GIFTS.WISDOM]: [4, 31, 58, 85, 112],
  [SPIRITUAL_GIFTS.KNOWLEDGE]: [5, 32, 59, 86, 113],
  [SPIRITUAL_GIFTS.EXHORTATION]: [6, 33, 60, 87, 114],
  [SPIRITUAL_GIFTS.DISCERNMENT]: [7, 34, 61, 88, 115],
  [SPIRITUAL_GIFTS.GIVING]: [8, 35, 62, 89, 116],
  [SPIRITUAL_GIFTS.HELPS]: [9, 36, 63, 90, 117],
  [SPIRITUAL_GIFTS.MERCY]: [10, 37, 64, 91, 118],
  [SPIRITUAL_GIFTS.MISSIONARY]: [11, 38, 65, 92, 119],
  [SPIRITUAL_GIFTS.EVANGELIST]: [12, 39, 66, 93, 120],
  [SPIRITUAL_GIFTS.HOSPITALITY]: [13, 40, 67, 94, 121],
  [SPIRITUAL_GIFTS.FAITH]: [14, 41, 68, 95, 122],
  [SPIRITUAL_GIFTS.LEADERSHIP]: [15, 42, 69, 96, 123],
  [SPIRITUAL_GIFTS.ADMINISTRATION]: [16, 43, 70, 97, 124],
  [SPIRITUAL_GIFTS.MIRACLES]: [17, 44, 71, 98, 125],
  [SPIRITUAL_GIFTS.HEALING]: [18, 45, 72, 99, 126],
  [SPIRITUAL_GIFTS.TONGUES]: [19, 46, 73, 100, 127],
  [SPIRITUAL_GIFTS.INTERPRETATION]: [20, 47, 74, 101, 128],
  [SPIRITUAL_GIFTS.VOLUNTARY_POVERTY]: [21, 48, 75, 102, 129],
  [SPIRITUAL_GIFTS.CELIBACY]: [22, 49, 76, 103, 130],
  [SPIRITUAL_GIFTS.INTERCESSION]: [23, 50, 77, 104, 131],
  [SPIRITUAL_GIFTS.DELIVERANCE]: [24, 51, 78, 105, 132],
  [SPIRITUAL_GIFTS.SERVICE]: [25, 52, 79, 106, 133],
  [SPIRITUAL_GIFTS.APOSTLE]: [26, 53, 80, 107, 134],
  [SPIRITUAL_GIFTS.WORSHIP_LEADING]: [27, 54, 81, 108, 135],
};

// Helper function to determine question category based on content
function determineCategory(question: string): QuizQuestion['category'] {
  const lowerQuestion = question.toLowerCase();
  
  if (lowerQuestion.includes('feel') || lowerQuestion.includes('desire') || lowerQuestion.includes('enjoy')) {
    return 'desires';
  }
  if (lowerQuestion.includes('have') || lowerQuestion.includes('been') || lowerQuestion.includes('told')) {
    return 'experiences';
  }
  if (lowerQuestion.includes('can') || lowerQuestion.includes('able') || lowerQuestion.includes('skill')) {
    return 'skills';
  }
  return 'tendencies';
}

// Map JSON questions to QuizQuestion type
export const QUESTIONS: QuizQuestion[] = questionsAndGifts.quizQuestions.map(q => ({
  id: q.id.toString(),
  text: q.question,
  category: determineCategory(q.question),
  options: [
    { id: '3', text: 'More', value: 3 },
    { id: '2', text: 'Some', value: 2 },
    { id: '1', text: 'A Little', value: 1 },
    { id: '0', text: 'Not at all', value: 0 }
  ],
  weight: 1 // Default weight, can be adjusted based on importance
}));

// Map JSON spiritual gifts to SpiritualGift type
export const GIFT_DESCRIPTIONS: Record<string, SpiritualGift> = questionsAndGifts.spiritualGifts.reduce((acc, gift) => {
  // Create a mapping from JSON gift names to our internal keys
  let key: string;
  switch (gift.gift.toLowerCase()) {
    case 'discerning of spirits':
      key = SPIRITUAL_GIFTS.DISCERNMENT;
      break;
    case 'voluntary poverty':
      key = SPIRITUAL_GIFTS.VOLUNTARY_POVERTY;
      break;
    case 'leading worship':
      key = SPIRITUAL_GIFTS.WORSHIP_LEADING;
      break;
    case 'interpretation of tongues':
      key = SPIRITUAL_GIFTS.INTERPRETATION;
      break;
    default:
      key = gift.gift.toLowerCase();
  }
  
  acc[key] = {
    name: gift.gift,
    description: gift.definition,
    biblicalReferences: gift.scriptureReferences,
    strength: 0, // This will be calculated based on quiz responses
    practicalApplications: [] // These will be generated by the LLM based on the gift and user's responses
  };
  return acc;
}, {} as Record<string, SpiritualGift>);

// Helper function to calculate gift scores from responses
export function calculateGiftScores(responses: Record<string, number>): Record<string, number> {
  const scores: Record<string, number> = {};

  Object.entries(GIFT_QUESTIONS).forEach(([gift, questionIds]) => {
    const giftScore = questionIds.reduce((sum, qId) => {
      return sum + (responses[qId.toString()] || 0);
    }, 0);
    scores[gift] = giftScore;
  });

  return scores;
} 